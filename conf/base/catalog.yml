# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/data/data_catalog.html
#

# OLIDA (https://olida.ibsquare.be/api/swagger/) data
olida_combinations:
  type: pandas.CSVDataSet
  filepath: data/01_raw/olida/Combination.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False

olida_genes:
  type: pandas.CSVDataSet
  filepath: data/01_raw/olida/Gene.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False

# Study conduucted by Jolanda van Leeuwen ()
jvl:
  type: pandas.ExcelDataSet
  filepath: data/01_raw/jvl/media-2.xlsx
  load_args:
    sheet_name: 'Data'

# Annotated JVL data
jvl_annotated:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/jvl/annotated.csv
  load_args:
    sep: ','
  save_args:
    index: False

# Scored JVL data
jvl_scored:
  type: modspy_data.extras.datasets.dask.DaskDataFrameDataSet
  filepath: data/02_intermediate/jvl/scored.csv
  # load_args:
  #   sep: ','
  save_args:
    index: False

# JVL data with all features
jvl_features:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/jvl/features.csv
  load_args:
    sep: ','
  save_args:
    index: False

# MTG Lab data
zyg1_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/mtg/combined_dataset_2022-11-15-07-04.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False
    sep: '\t'

zyg1_truemods:
  type: pandas.CSVDataSet
  filepath: data/01_raw/mtg/confirmed_modifiers.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False
    sep: '\t'

zyg1_scored:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/mtg/scored.csv
  load_args:
    sep: ','
  save_args:
    index: False
    sep: '\t'

zyg1_features:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/mtg/features.csv
  load_args:
    sep: ','
  save_args:
    index: False
    sep: '\t'


# Combined Dataset
modifiers:
  type: pandas.CSVDataSet
  filepath: data/04_feature/modifier_merged_dataset.tsv
  load_args:
    sep: ','
  save_args:
    index: False



# Gene Ontology (https://geneontology.org/docs/download-ontology/) data
go:
  type: modspy_data.extras.datasets.knowledge_graph_dataset.KGDataSet
  filepath: http://purl.obolibrary.org/obo/go/go-basic.obo

goa:
  type: pandas.CSVDataSet
  filepath: http://geneontology.org/gene-associations/goa_human.gaf.gz
  load_args:
    compression: gzip
    sep: '\t'
    names: ['DB', 'DB_Object_ID', 'DB_Object_Symbol', 'Qualifier', 'GO_ID', 'DB:Reference', 'Evidence_Code', 'With_From', 'Aspect', 'DB_Object_Name', 'DB_Object_Synonym', 'DB_Object_Type', 'Taxon', 'Date', 'Assigned_By', 'Annotation_Extension', 'Gene_Product_Form_ID']
    usecols: ['DB_Object_ID', 'GO_ID', 'Evidence_Code', 'Aspect', 'DB_Object_Name', 'DB_Object_Synonym', 'DB_Object_Type', 'Taxon', 'Date', 'Assigned_By', 'Annotation_Extension', 'Gene_Product_Form_ID']
    dtype: {'DB_Object_ID': str, 'GO_ID': str, 'Evidence_Code': str, 'Aspect': str, 'DB_Object_Name': str, 'DB_Object_Synonym': str, 'DB_Object_Type': str, 'Taxon': str, 'Date': str, 'Assigned_By': str, 'Annotation_Extension': str, 'Gene_Product_Form_ID': str}
    na_values: ['']
    #skiprows: 23
    comment: '!'


# STRING-DB (https://string-db.org/cgi/download.pl) data
string_interactions:
  type: modspy_data.extras.datasets.dask.DaskDataFrameDataSet
  filepath: data/01_raw/stringdb/9606.protein.links.full.v12.0.txt
  load_args:
    sep: ' '
    names: ['protein1', 'protein2', 'neighborhood', 'neighborhood_transferred', 
    'fusion', 'cooccurence', 'homology', 'coexpression', 'coexpression_transferred', 
    'experiments', 'experiments_transferred', 'database', 'database_transferred', 
    'textmining', 'textmining_transferred', 'combined_score']
    usecols: ['protein1', 'protein2', 'neighborhood', 'neighborhood_transferred', 
    'fusion', 'cooccurence', 'homology', 'coexpression', 'coexpression_transferred', 
    'experiments', 'experiments_transferred', 'database', 'database_transferred', 
    'textmining', 'textmining_transferred', 'combined_score']
    na_values: ['']
    skiprows: 1

string_alias:
  type: modspy_data.extras.datasets.dask.DaskDataFrameDataSet
  filepath: data/01_raw/stringdb/9606.protein.aliases.v12.0.txt.gz
  load_args:
    compression: gzip
    sep: '\t'
    names: ['protein', 'alias', 'source']
    usecols: ['protein', 'alias', 'source']
    na_values: ['']
    skiprows: 1



xs:
  type: MemoryDataSet
  data: [5, 4,7,8,9,9,0,5,8,8,66,5,4,6]
n:
  type: MemoryDataSet
  data: 200
m:
  type: MemoryDataSet
  data: 5
m2:
  type: MemoryDataSet
  data: 5
v:
  type: MemoryDataSet
  data: 3
