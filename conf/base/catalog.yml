# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# The Data Catalog supports being able to reference the same file using two different DataSet implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/data/data_catalog.html
#


#####################################################
################# Raw Datasets ######################
#####################################################


# MTG Lab data
zyg1_raw:
  type: pandas.CSVDataSet
  filepath: data/01_raw/mtg/combined_dataset_2022-11-15-07-04.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False
    sep: '\t'

zyg1_truemods:
  type: pandas.CSVDataSet
  filepath: data/01_raw/mtg/confirmed_modifiers.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False
    sep: '\t'


# OLIDA (https://olida.ibsquare.be/api/swagger/) data
olida_combinations:
  type: pandas.CSVDataSet
  filepath: data/01_raw/olida/Combination.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False

olida_genes:
  type: pandas.CSVDataSet
  filepath: data/01_raw/olida/Gene.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False

olida_gene_combinations:
  type: pandas.CSVDataSet
  filepath: data/01_raw/olida/GeneCombination.tsv
  load_args:
    sep: '\t'
  save_args:
    index: False


# Study conduucted by Jolanda van Leeuwen (JVL)
jvl:
  type: pandas.ExcelDataSet
  filepath: data/01_raw/jvl/media-2.xlsx
  load_args:
    sheet_name: 'Data'


# NCBI (https://www.ncbi.nlm.nih.gov/) data
############################################
# Gene info from https://ftp.ncbi.nih.gov/gene/DATA/gene_info.gz on 7 Dec 2023
ncbi_gene_info:
  type: pandas.CSVDataSet
  filepath: data/01_raw/ncbi/gene_info.gz
  load_args:
    compression: gzip
    sep: '\t'
    names: ['tax_id', 'GeneID', 'Symbol', 'LocusTag', 'Synonyms', 'dbXrefs', 'chromosome', 'map_location', 'description', 'type_of_gene', 'Symbol_from_nomenclature_authority', 'Full_name_from_nomenclature_authority', 'Nomenclature_status', 'Other_designations', 'Modification_date', 'Feature_type']
    usecols: ['tax_id', 'GeneID', 'Symbol', 'LocusTag', 'Synonyms', 'dbXrefs', 'chromosome', 'map_location', 'description', 'type_of_gene', 'Symbol_from_nomenclature_authority', 'Full_name_from_nomenclature_authority', 'Nomenclature_status', 'Other_designations', 'Modification_date', 'Feature_type']
    na_values: ['-']
    skiprows: 1
  save_args:
    index: False

# Neighboring genes: from https://ftp.ncbi.nih.gov/gene/DATA/gene_neighbors.gz on 7 Dec 2023
ncbi_gene_neighbors:
  type: pandas.CSVDataSet
  filepath: data/01_raw/ncbi/gene_neighbors.gz
  load_args:
    compression: gzip
    sep: '\t'
    na_values: ['-']
    skiprows: 1
  save_args:
    index: False


# Gene Ontology (https://geneontology.org/docs/download-ontology/) data
go:
  type: modspy_data.extras.datasets.knowledge_graph_dataset.KGDataSet
  filepath: data/01_raw/go/go-basic.obo

goa:
  type: modspy_data.extras.datasets.gaf.GAFDataFile
  filepath: data/01_raw/go/goa_human.gaf.gz


wb_go:
  type: modspy_data.extras.datasets.knowledge_graph_dataset.KGDataSet
  filepath: data/01_raw/wormbase/gene_ontology.WS290.obo
wb_goa:
  type: modspy_data.extras.datasets.gaf.GAFDataFile
  filepath: data/01_raw/wormbase/gene_association.WS290.wb

wb_po:
  type: modspy_data.extras.datasets.knowledge_graph_dataset.KGDataSet
  filepath: data/01_raw/wormbase/phenotype_association.WS290.wb
wb_poa:
  type: modspy_data.extras.datasets.gaf.GAFDataFile
  filepath: data/01_raw/wormbase/phenotype_association.WS290.wb



# STRING-DB (https://string-db.org/cgi/download.pl) data
string_interactions:
  type: modspy_data.extras.datasets.dask.DaskDataFrameDataSet
  filepath: data/01_raw/stringdb/9606.protein.links.full.v12.0.txt
  load_args:
    sep: ' '
    names: ['protein1', 'protein2', 'neighborhood', 'neighborhood_transferred', 
    'fusion', 'cooccurence', 'homology', 'coexpression', 'coexpression_transferred', 
    'experiments', 'experiments_transferred', 'database', 'database_transferred', 
    'textmining', 'textmining_transferred', 'combined_score']
    usecols: ['protein1', 'protein2', 'neighborhood', 'neighborhood_transferred', 
    'fusion', 'cooccurence', 'homology', 'coexpression', 'coexpression_transferred', 
    'experiments', 'experiments_transferred', 'database', 'database_transferred', 
    'textmining', 'textmining_transferred', 'combined_score']
    na_values: ['']
    skiprows: 1

string_alias:
  type: modspy_data.extras.datasets.dask.DaskDataFrameDataSet
  filepath: data/01_raw/stringdb/9606.protein.aliases.v12.0.txt.gz
  load_args:
    compression: gzip
    sep: '\t'
    names: ['protein', 'alias', 'source']
    usecols: ['protein', 'alias', 'source']
    na_values: ['']
    skiprows: 1



#####################################################
################# Cleaned Datasets ##################
#####################################################


olida_pairs:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/olida/pairs.tsv
  save_args:
    index: False

olida_annotated:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/olida/annotated.tsv
  save_args:
    index: False
    


#####################################################
################# Annotated Datasets ################
#####################################################


annotated:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/v3/annotated.tsv
  load_args:
    sep: ','
  save_args:
    index: False

zyg1_scored:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/mtg/scored.csv
  load_args:
    sep: ','
  save_args:
    index: False
    sep: '\t'

zyg1_features:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/mtg/features.csv
  load_args:
    sep: ','
  save_args:
    index: False
    sep: '\t'


# Annotated JVL data
jvl_annotated:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/jvl/annotated.csv
  load_args:
    sep: ','
  save_args:
    index: False

# Scored JVL data
jvl_scored:
  type: modspy_data.extras.datasets.dask.DaskDataFrameDataSet
  filepath: data/02_intermediate/jvl/scored.csv
  # load_args:
  #   sep: ','
  save_args:
    index: False

# JVL data with all features
jvl_features:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/jvl/features.csv
  load_args:
    sep: ','
  save_args:
    index: False


# Combined Dataset
modifiers:
  type: pandas.CSVDataSet
  filepath: data/04_feature/modifier_merged_dataset.tsv
  load_args:
    sep: ','
  save_args:
    index: False



xs:
  type: MemoryDataSet
  data: [5, 4,7,8,9,9,0,5,8,8,66,5,4,6]
n:
  type: MemoryDataSet
  data: 200
m:
  type: MemoryDataSet
  data: 5
m2:
  type: MemoryDataSet
  data: 5
v:
  type: MemoryDataSet
  data: 3
